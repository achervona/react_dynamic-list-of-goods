{"version":3,"sources":["api/goods.js","components/GoodsList/GoodsList.js","App.js","index.js"],"names":["getAll","fetch","then","response","json","get5First","result","sort","a","b","name","localeCompare","slice","getRedGoods","filter","good","color","GoodsList","goods","map","key","id","style","defaultProps","App","state","setGoods","callback","setState","this","className","type","onClick","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"6OAGaA,G,MAAS,kBACpBC,MAHW,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YAGlBC,EAAY,kBACvBL,IAASE,MAAK,SAAAI,GAAM,OAAIA,EACrBC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,SACtCE,MAAM,EAAG,OAGDC,EAAc,kBACzBb,IAASE,MAAK,SAAAI,GAAM,OAAIA,EACrBQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,aCbZC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,4BACGA,EAAMC,KAAI,SAAAJ,GAAI,OACb,wBACEK,IAAKL,EAAKM,GACVC,MAAO,CAAEN,MAAOD,EAAKC,QAEpBD,EAAKL,WAgBdO,EAAUM,aAAe,CACvBL,MAAO,I,ICiCMM,E,4MArDbC,MAAQ,CACNP,MAAO,I,EAGTQ,SAAW,SAACC,GACVA,IAAWzB,MAAK,SAACgB,GACf,EAAKU,SAAS,CACZV,c,uDAKI,IAAD,OACCA,EAAUW,KAAKJ,MAAfP,MAER,OACE,yBAAKY,UAAU,OACb,wBAAIA,UAAU,SAAd,yBAEA,yBAAKA,UAAU,gBACb,4BACEA,UAAU,oBACVC,KAAK,SACLC,QAAS,kBAAM,EAAKN,SAAS1B,KAH/B,kBAQA,4BACE8B,UAAU,oBACVC,KAAK,SACLC,QAAS,kBAAM,EAAKN,SAASrB,KAH/B,sBAQA,4BACEyB,UAAU,mBACVC,KAAK,SACLC,QAAS,kBAAM,EAAKN,SAASb,KAH/B,mBASF,yBAAKiB,UAAU,WACb,kBAAC,EAAD,CAAWZ,MAAOA,U,GA/CVe,IAAMC,eCFxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.33d331cc.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport const getAll = () => (\n  fetch(API_URL)\n    .then(response => response.json())\n);\n\nexport const get5First = () => (\n  getAll().then(result => result\n    .sort((a, b) => a.name.localeCompare(b.name))\n    .slice(0, 5))\n);\n\nexport const getRedGoods = () => (\n  getAll().then(result => result\n    .filter(good => good.color === 'red'))\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nGoodsList.defaultProps = {\n  goods: [],\n};\n","import React from 'react';\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodsList } from './components/GoodsList';\n\nclass App extends React.PureComponent {\n  state = {\n    goods: [],\n  }\n\n  setGoods = (callback) => {\n    callback().then((goods) => {\n      this.setState({\n        goods,\n      });\n    });\n  };\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"title\">Dynamic list of Goods</h1>\n\n        <div className=\"app__buttons\">\n          <button\n            className=\"button is-primary\"\n            type=\"button\"\n            onClick={() => this.setGoods(getAll)}\n          >\n            Load All goods\n          </button>\n\n          <button\n            className=\"button is-primary\"\n            type=\"button\"\n            onClick={() => this.setGoods(get5First)}\n          >\n            Load 5 first goods\n          </button>\n\n          <button\n            className=\"button is-danger\"\n            type=\"button\"\n            onClick={() => this.setGoods(getRedGoods)}\n          >\n            Load red goods\n          </button>\n        </div>\n\n        <div className=\"content\">\n          <GoodsList goods={goods} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}